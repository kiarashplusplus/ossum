{"version":3,"sources":["HLSSource.js","App.js","index.js"],"names":["HLSSource","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hls","Hls","_this$props","src","video","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","destroy","react_default","a","createElement","type","Component","ossumVideosUrl","videos","Bridge","cover","buttons","startTime","endTime","name","Sunrise","Beach","MenuItem","_ref","text","selected","className","concat","App","state","componentDidMount","player","subscribeToStateChange","handleStateChange","bind","assertThisInitialized","onSelect","key","setState","getState","console","log","currentTime","filtered","filter","_ref2","_this2","_videos$this$state$se","isHlsSupported","build_default","data","map","el","App_MenuItem","hideArrows","lib","ref","autoPlay","playsInline","preload","HLSSource_HLSSource","isVideoChild","poster","rc","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a2ccbd84.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Hls from 'hls.js';\n\nexport default class HLSSource extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.hls = new Hls();\n  }\n\n  componentDidMount() {\n    // `src` is the property get from this component\n    // `video` is the property insert from `Video` component\n    // `video` is the html5 video element\n    const { src, video } = this.props;\n    // load hls video source base on hls.js\n    if (Hls.isSupported()) {\n      this.hls.loadSource(src);\n      this.hls.attachMedia(video);\n      this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        video.play();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // destroy hls video source\n    if (this.hls) {\n      this.hls.destroy();\n    }\n  }\n\n  render() {\n    return (\n      <source\n        src={this.props.src}\n        type={this.props.type || 'application/x-mpegURL'}\n      />\n    );\n  }\n}","import React, { Component } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport { Player } from \"video-react\";\nimport { filter } from \"lodash\";\nimport Hls from \"hls.js\";\nimport HLSSource from \"./HLSSource\";\nimport \"./App.css\";\n\nconst ossumVideosUrl = \"https://res.cloudinary.com/ossum/video/upload/\";\nconst ossumImageUrl = \"https://res.cloudinary.com/ossum/image/upload/\";\n\nconst videos = {\n  Bridge: {\n    video: \"v1565908181/Bridge_In_Place_bfubzg.mp4\",\n    hls: \"v1565908181/Bridge_In_Place_bfubzg.m3u8\",\n    cover: \"v1565816228/Bridge_In_Place_xga1ot.jpg\",\n    buttons: [\n      {\n        startTime: 0,\n        endTime: 1000,\n        name: \"Sunrise\"\n      },\n      {\n        startTime: 6,\n        endTime: 15,\n        name: \"Beach\"\n      }\n    ]\n  },\n  Sunrise: {\n    video: \"v1565908175/coverr-sunrise-1563948708950_oqeaic.mp4\",\n    hls: \"v1565908175/coverr-sunrise-1563948708950_oupdpu.m3u8\",\n    cover: \"v1565816229/coverr-sunrise-1563948708950_li2su1.jpg\",\n    buttons: [\n      {\n        startTime: 0,\n        endTime: 1000,\n        name: \"Bridge\"\n      }\n    ]\n  },\n  Beach: {\n    video: \"v1565908176/coverr-bali-beach-overhead-1563969579253_xooqgl.mp4\",\n    hls: \"v1565908176/coverr-bali-beach-overhead-1563969579253_xooqgl.m3u8\",\n    cover: \"v1565816227/coverr-bali-beach-overhead-1563969579253_puhw3l.jpg\"\n  }\n};\n\nconst MenuItem = ({ text, selected }) => {\n  return <div className={`menu-item ${selected ? \"active\" : \"\"}`}>{text}</div>;\n};\n\nexport const Menu = (buttons, selected) =>\n  buttons.map(el => {\n    const { name } = el;\n\n    return <MenuItem text={name} key={name} selected={selected} />;\n  });\n\nclass App extends Component {\n  state = {\n    selected: \"Bridge\",\n    buttons: [{ name: \"Sunrise\" }, { name: \"Beach\" }]\n  };\n\n  componentDidMount = () => {\n    this.player.subscribeToStateChange(this.handleStateChange.bind(this));\n  };\n\n  handleStateChange(state) {\n    const { player } = this.player.getState();\n    console.log(this.state.selected, player.currentTime);\n\n    // Check all buttons for the selected video and filter to the ones for currentTime\n    const buttons = videos[this.state.selected].buttons;\n    if (buttons) {\n      const filtered = filter(\n        buttons,\n        ({ startTime, endTime }) =>\n          startTime < player.currentTime && player.currentTime < endTime\n      );\n      this.setState({ buttons: filtered });\n    } else {\n      this.setState({ buttons: [] });\n    }\n  }\n\n  onSelect = key => {\n    this.setState({ selected: key });\n  };\n\n  render() {\n    const { video, hls, cover } = videos[this.state.selected];\n    const isHlsSupported = Hls.isSupported();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"Menu\">\n            <ScrollMenu\n              data={Menu(this.state.buttons, this.state.selected)}\n              hideArrows\n              selected={this.state.selected}\n              onSelect={this.onSelect}\n            />\n          </div>\n          {isHlsSupported ? (\n            <Player\n              ref={player => {\n                this.player = player;\n              }}\n              autoPlay\n              playsInline\n              preload=\"auto\"\n            >\n              <HLSSource isVideoChild src={ossumVideosUrl + hls} />\n            </Player>\n          ) : (\n            <Player\n              ref={player => {\n                this.player = player;\n              }}\n              autoPlay\n              playsInline\n              poster={ossumImageUrl + cover}\n              rc={ossumVideosUrl + video}\n              preload=\"auto\"\n            ></Player>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}